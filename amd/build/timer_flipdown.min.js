"use strict";

/**
 * Implementaton of the quizaccess_delayed timer JScript.
 * Based on quizaccess_activateattempt https://github.com/IITBombayWeb/moodle-quizaccess_delayed/tree/v1.0.3
 *
 * @package   quizaccess_delayed
 * @author    Juan Pablo de Castro
 * @copyright 2020 University of Valladolid, Spain
 * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define(["jquery"], function (t) {
  var e, i;
  return {
    get_string: function (t, i) {
      let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
      return e[t];
    },
    set_strings: function (t) {
      e = t;
    },
    init: function () {
      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ".continuebutton";
      let n = arguments.length > 1 ? arguments[1] : undefined;
      let d = arguments.length > 2 ? arguments[2] : undefined;
      let a = arguments.length > 3 ? arguments[3] : undefined;
      let r = arguments.length > 4 ? arguments[4] : undefined;
      let p = arguments.length > 5 ? arguments[5] : undefined;
      let s = arguments.length > 6 ? arguments[6] : undefined;
      if (t(".quizattempt #delayednotification").length > 0) return !1;
      this.set_strings(s), i = new Date().getTime() + p, t("<link>").appendTo("head").attr({
        type: "text/css",
        rel: "stylesheet",
        href: "accessrule/delayed/flipdown/flipdown.css"
      }), jQuery.getScript("accessrule/delayed/flipdown/flipdown.js", this.startCounter.bind(this));
      var o = t("<center>" + s.quizwillstartinabout + '<div id="flipdown" class="flipdown"></div><p>' + s.pleasewait + "</p></center>"),
        l = t("<form/>", {
          method: "post",
          action: n
        }).append(t("<input>", {
          type: "hidden",
          name: "cmid",
          value: d
        }), t("<input>", {
          type: "hidden",
          name: "sesskey",
          value: a
        }), t("<p>", {
          id: "activatedelayedtimer"
        }), t("<input>", {
          type: "submit",
          class: "btn btn-primary",
          id: "startAttemptButton",
          disabled: !0,
          value: r
        })),
        u = t('<div id="delayednotification"/>').append(o);
      t(e).prepend(l, t("</br>")), t(e).prepend(u), t("[id=startAttemptButton]").prop("disabled", !0);
      var c = t(e).find(".continuebutton");
      c.prev("p").hide(), c.hide();
    },
    startCounter: function () {
      new FlipDown(i / 1e3, {
        theme: "dark",
        headings: ["", "", "", ""]
      }).start().ifEnded(this.activateAttempt), t("#flipdown").width(32 * t("#flipdown").find(".rotor").length);
    },
    activateAttempt: function () {
      var t = new Date().getTime();
      i - t < 0 ? location.reload() : setTimeout(this.activateAttempt, 1e3);
    }
  };
});
//# sourceMappingURL=timer_flipdown.min.js.map
